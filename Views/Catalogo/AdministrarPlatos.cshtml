<link rel="stylesheet" href="@Url.Content("~/css/Estilos.css")" />
@model List<JarredsOrderHub.Models.Platillo>

@{
    ViewData["Title"] = "Administrar Platos";
}

<h1>Platos</h1>

<!-- Tabla de Platos -->
<table id="plateTable" class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Nombre</th>
            <th>Descripción</th>
            <th>Precio</th>
            <th>Imagen</th>
            <th>Categoría</th>
            <th>Estado</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var platillo in Model)
        {
            <tr id="platillo-@platillo.IdPlatillo">
                <td>@platillo.IdPlatillo</td>
                <td>@platillo.Nombre</td>
                <td>@platillo.Descripcion</td>
                <td>@platillo.Precio.ToString("C")</td>
                <td><img src="@platillo.Imagen" alt="@platillo.Nombre" width="50" /></td>
                <td>@platillo.IdCategoria</td>
                <td>@(platillo.Activo ? "Disponible" : "No Disponible")</td>
                <td>
                    <button class="icon-btn edit" onclick="editarPlatillo(@platillo.IdPlatillo)">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="icon-btn delete" onclick="eliminarPlatillo(@platillo.IdPlatillo)">
                        <i class="fas fa-trash-alt"></i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Botón Añadir Plato -->
<button id="addPlateBtn" class="add-plate">
    Añadir Plato
</button>

<!-- Popup Modal para Añadir/Editar Plato -->
<div id="plateModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2 id="title-modal">Añadir Plato</h2>
            <span class="close" id="closePlateModal">&times;</span>
        </div>

        <form id="plateForm">
            <!-- Nombre del Plato -->
            <label for="platilloNombre">Nombre del Plato:</label>
            <input type="text" id="platilloNombre" placeholder="Ej: Hamburguesa Clásica" required>

            <!-- Descripción del Plato -->
            <label for="platilloDescripcion">Descripción:</label>
            <textarea id="platilloDescripcion" placeholder="Descripción del plato" rows="3"></textarea>

            <!-- Precio -->
            <label for="platilloPrecio">Precio:</label>
            <input type="number" id="platilloPrecio" step="0.01" required>

            <!-- URL de la Imagen -->
            <label for="platilloImagen">URL de la Imagen:</label>
            <input type="text" id="platilloImagen">

            <!-- Categoría -->
            <label for="platilloCategoria">Categoría:</label>
            <select id="platilloCategoria" name="IdCategoria" class="form-control" required>
                <!-- Se cargarán dinámicamente las categorías activas -->
            </select>

            <!-- Estado del Plato -->
            <fieldset>
                <legend>Estado</legend>
                <label>
                    <input type="radio" id="estadoActivo" name="estado" value="true" checked>
                    Disponible
                </label>
                <label>
                    <input type="radio" id="estadoInactivo" name="estado" value="false">
                    No Disponible
                </label>
            </fieldset>

            <!-- Botón de Guardar -->
            <button type="submit">Guardar</button>
        </form>
    </div>
</div>

<!-- Scripts para manejar el POPUP y AJAX -->
<script>
    const plateModal = document.getElementById("plateModal");
    const addPlateBtn = document.getElementById("addPlateBtn");
    const closePlateModal = document.getElementById("closePlateModal");
    const plateForm = document.getElementById("plateForm");
    let platilloEditandoId = null;

    // Cargar categorías al iniciar (para el select de platillos)
    function cargarCategorias() {
        fetch('/api/CatalogoService/categorias')
            .then(response => response.json())
            .then(categorias => {
                const select = document.getElementById("platilloCategoria");
                select.innerHTML = '';
                categorias.forEach(categoria => {
                    if (categoria.activa) {
                        const option = document.createElement('option');
                        option.value = categoria.idCategoria; // Se asume que la API devuelve 'idCategoria'
                        option.textContent = categoria.nombre;  // Se asume que la API devuelve 'nombre'
                        select.appendChild(option);
                    }
                });
            })
            .catch(error => console.error('Error al cargar categorías:', error));
    }

    // Llamar a cargarCategorías cuando se carga la página
    document.addEventListener('DOMContentLoaded', cargarCategorias);

    // Abrir el POPUP para añadir o editar
    addPlateBtn.onclick = function () {
        platilloEditandoId = null;

        document.getElementById("platilloNombre").value = '';
        document.getElementById("platilloDescripcion").value = '';
        document.getElementById("platilloPrecio").value = '';
        document.getElementById("platilloImagen").value = '';
        document.querySelectorAll('input[name="estado"]').forEach(radio => radio.checked = false);
        document.getElementById("estadoActivo").checked = true;

        // Actualizar el texto del botón y del título del modal
        document.querySelector("#plateForm button[type='submit']").textContent = "Guardar";
        document.getElementById("title-modal").textContent = "Añadir Plato";

        plateModal.style.display = "block";
    };

    // Cerrar el POPUP
    closePlateModal.onclick = function () {
        plateModal.style.display = "none";
    };

    // Cerrar el POPUP si se hace clic fuera de él
    window.onclick = function (event) {
        if (event.target == plateModal) {
            plateModal.style.display = "none";
        }
    };

    // Manejar el envío del formulario (Crear o Editar)
    plateForm.onsubmit = function (e) {
        e.preventDefault();

        const platilloData = {
            Nombre: document.getElementById("platilloNombre").value,
            Descripcion: document.getElementById("platilloDescripcion").value,
            Precio: parseFloat(document.getElementById("platilloPrecio").value),
            Imagen: document.getElementById("platilloImagen").value,
            IdCategoria: parseInt(document.getElementById("platilloCategoria").value),
            Activo: document.querySelector('input[name="estado"]:checked').value === 'true'
        };

        const url = platilloEditandoId ? `/api/CatalogoService/platillos/${platilloEditandoId}` : '/api/CatalogoService/platillos';
        const method = platilloEditandoId ? 'PUT' : 'POST';

        fetch(url, {
            method: method,
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(platilloData)
        })
        .then(response => response.json())
        .then(data => {
            // Asegurarse de usar las propiedades en minúsculas si el JSON se serializa en camelCase
            if (platilloEditandoId) {
                // Actualizar la fila existente
                const row = document.getElementById(`platillo-${platilloEditandoId}`);
                row.innerHTML = `
                    <td>${data.idPlatillo}</td>
                    <td>${data.Nombre}</td>
                    <td>${data.Descripcion}</td>
                        <<td>${data.Precio ? data.Precio.toLocaleString('es-ES', { style: 'currency', currency: 'CR' }) : 'N/A'}</td>
                    <td><img src="${data.Imagen}" alt="${data.Nombre}" width="50" /></td>
                    <td>${data.IdCategoria}</td>
                    <td>${data.Activo ? "Disponible" : "No Disponible"}</td>
                    <td>
                        <button class="icon-btn edit" onclick="editarPlatillo(${data.idPlatillo})">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button class="icon-btn delete" onclick="eliminarPlatillo(${data.idPlatillo})">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </td>
                `;
            } else {
                // Agregar una nueva fila
                const table = document.querySelector("table tbody");
                const newRow = `
                    <tr id="platillo-${data.idPlatillo}">
                        <td>${data.idPlatillo}</td>
                        <td>${data.Nombre}</td>
                        <td>${data.Descripcion}</td>
                           <td>${data.Precio ? data.Precio.toLocaleString('es-ES', { style: 'currency', currency: 'CR' }) : 'N/A'}</td>
                        <td><img src="${data.Imagen}" alt="${data.Nombre}" width="50" /></td>
                        <td>${data.IdCategoria}</td>
                        <td>${data.Activo ? "Disponible" : "No Disponible"}</td>
                        <td>
                            <button class="icon-btn edit" onclick="editarPlatillo(${data.idPlatillo})">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="icon-btn delete" onclick="eliminarPlatillo(${data.idPlatillo})">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </td>
                    </tr>
                `;
                table.insertAdjacentHTML('beforeend', newRow);
            }

            plateModal.style.display = "none";
            plateForm.reset();
            platilloEditandoId = null;
        })
        .catch(error => console.error('Error al guardar el platillo:', error));
    };

    // Función para editar un platillo
    function editarPlatillo(platilloId) {
        platilloEditandoId = platilloId;

        fetch(`/api/CatalogoService/platillos/${platilloId}`)
        .then(response => response.json())
        .then(data => {
            document.getElementById("platilloNombre").value = data.Nombre;
            document.getElementById("platilloDescripcion").value = data.Descripcion;
            document.getElementById("platilloPrecio").value = data.Precio;
            document.getElementById("platilloImagen").value = data.Imagen;
            document.getElementById("platilloCategoria").value = data.IdCategoria;
            document.getElementById(data.Activo ? "estadoActivo" : "estadoInactivo").checked = true;

            document.getElementById("title-modal").textContent = "Editar Plato";
            document.querySelector("#plateForm button[type='submit']").textContent = "Actualizar";

            plateModal.style.display = "block";
        })
        .catch(error => console.error('Error al obtener el plato:', error));
    }

    // Función para eliminar un platillo
    function eliminarPlatillo(platilloId) {
        if (confirm('¿Estás seguro de que deseas eliminar este plato?')) {
            fetch(`/api/CatalogoService/platillos/${platilloId}`, { method: 'DELETE' })
            .then(response => {
                if (response.ok) {
                    const row = document.getElementById(`platillo-${platilloId}`);
                    row.remove();
                } else {
                    alert('Error al eliminar el platillo');
                }
            })
            .catch(error => console.error('Error al eliminar el platillo:', error));
        }
    }
</script>

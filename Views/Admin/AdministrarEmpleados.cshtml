<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="~/css/Estilos.css" />

<h1>Empleados</h1>

<!-- Tabla de Empleados -->
<table id="employeeTable">
    <thead>
        <tr>
            <th>ID</th>
            <th>Nombre</th>
            <th>Apellido</th>
            <th>Email</th>
            <th>Rol</th>
            <th>Horario</th>
            <th>Salario</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
<<<<<<< HEAD
        @foreach (var empleado in Model)
        {
            <tr id="employee-@empleado.IdEmpleado">
                <td>@empleado.IdEmpleado</td>
                <td>@empleado.Nombre</td>
                <td>@empleado.Apellido</td>
                <td>@empleado.Email</td>
                <td>@empleado.Rol.Nombre</td>
                <td>@empleado.Horario.HoraInicio - @empleado.Horario.HoraFin</td>
                <td>$@empleado.Salario</td>
                <td>
                    <button class="icon-btn edit" onclick="editarEmpleado(@empleado.IdEmpleado)">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="icon-btn delete" onclick="eliminarEmpleado(@empleado.IdEmpleado)">
                        <i class="fas fa-trash-alt"></i>
                    </button>
                </td>
            </tr>
        }
=======
        <!-- Fila 1 -->
        <tr>
            <td>1</td>
            <td>Juan</td>
            <td>Perez</td>
            <td>juan.perez@example.com</td>
            <td>Administrador</td>
            <td>8:00 AM - 5:00 PM</td>
            <td>$1,200</td>
            <td>
                <button class="icon-btn edit">
                    <i class="fas fa-edit"></i>
                </button>
                <button class="icon-btn delete">
                    <i class="fas fa-trash-alt"></i>
                </button>
                <button class="icon-btn add-task" onclick="openTaskPopup(1)">
                    <i class="fas fa-plus"></i> Añadir Tarea
                </button>
            </td>
        </tr>
        <!-- Fila 2 -->
        <tr>
            <td>2</td>
            <td>María</td>
            <td>Gómez</td>
            <td>maria.gomez@example.com</td>
            <td>Cocinera</td>
            <td>9:00 AM - 6:00 PM</td>
            <td>$900</td>
            <td>
                <button class="icon-btn edit">
                    <i class="fas fa-edit"></i>
                </button>
                <button class="icon-btn delete">
                    <i class="fas fa-trash-alt"></i>
                </button>
                <button class="icon-btn add-task" onclick="openTaskPopup(2)">
                    <i class="fas fa-plus"></i> Añadir Tarea
                </button>
            </td>
        </tr>
>>>>>>> b443d5bcbbc351568de9d98909daa9b1ca643d12
    </tbody>
</table>

<!-- Botón Añadir Empleado -->
<button class="add-employee" id="addEmployeeBtn">Añadir Empleado</button>

<<<<<<< HEAD
<!-- Modal para añadir/editar empleado -->
<div id="employeeModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2 id="modalTitle">Añadir Empleado</h2>
            <span class="close" id="closeModal">&times;</span>
        </div>      

        <form id="employeeForm">
            <input type="hidden" id="idEmpleado">
=======
<!-- Popup para añadir tarea -->
<div class="overlay" id="overlay"></div>
<div class="popup" id="taskPopup">
    <h3>Añadir Tarea</h3>

    <!-- Campo para el nombre de la tarea -->
    <label for="taskName">Nombre de la tarea:</label>
    <input type="text" id="taskName" placeholder="Escribe el nombre de la tarea" required>

    <!-- Campo para la descripción de la tarea -->
    <label for="taskDescription">Descripción:</label>
    <textarea id="taskDescription" placeholder="Escribe una breve descripción de la tarea" required></textarea>

    <!-- Campo para la fecha de entrega -->
    <label for="taskDueDate">Fecha de Entrega:</label>
    <input type="date" id="taskDueDate" required>

    <!-- Campo para el estado de la tarea -->
    <label for="taskStatus">Estado:</label>
    <select id="taskStatus" required>
        <option value="Pendiente">Pendiente</option>
        <option value="En Progreso">En Progreso</option>
        <option value="Completado">Completado</option>
    </select>

    <!-- Botones -->
    <button onclick="addTask()">Guardar Tarea</button>
    <button onclick="closeTaskPopup()">Cerrar</button>
</div>

<script>
    let currentEmployeeId = null;

    // Función para abrir el popup de añadir tarea
    function openTaskPopup(employeeId) {
        currentEmployeeId = employeeId;
        document.getElementById('overlay').style.display = 'block';
        document.getElementById('taskPopup').style.display = 'block';
    }

    // Función para cerrar el popup
    function closeTaskPopup() {
        document.getElementById('overlay').style.display = 'none';
        document.getElementById('taskPopup').style.display = 'none';
        document.getElementById('taskName').value = '';
        document.getElementById('taskDescription').value = '';
        document.getElementById('taskDueDate').value = '';
        document.getElementById('taskStatus').value = 'Pendiente';
    }

    // Función para añadir la tarea
    function addTask() {
        const taskName = document.getElementById('taskName').value;
        const taskDescription = document.getElementById('taskDescription').value;
        const taskDueDate = document.getElementById('taskDueDate').value;
        const taskStatus = document.getElementById('taskStatus').value;

        // Validar que todos los campos estén completos
        if (taskName && taskDescription && taskDueDate) {
            alert(`Tarea añadida para el empleado ID ${currentEmployeeId}:\nNombre: ${taskName}\nDescripción: ${taskDescription}\nFecha de Entrega: ${taskDueDate}\nEstado: ${taskStatus}`);
            closeTaskPopup();
        } else {
            alert("Por favor, ingresa todos los datos necesarios.");
        }
    }
</script>




<!-- Popup Modal para Añadir Empleado -->
<div id="employeeModal" class="modal">
    <div class="modal-content">
        <span class="close" id="closeModal">&times;</span>
        <h2>Añadir Empleado</h2>
        <form id="employeeForm">
>>>>>>> b443d5bcbbc351568de9d98909daa9b1ca643d12
            <label for="nombre">Nombre:</label>
            <input type="text" id="nombre" required>
            <label for="apellido">Apellido:</label>
            <input type="text" id="apellido" required>
            <label for="email">Email:</label>
            <input type="email" id="email" required>
            <label for="rol">Rol:</label>
            <select id="rol" required>
<<<<<<< HEAD
                @foreach (var rol in ViewBag.Roles)
                {
                    <option value="@rol.Id">@rol.Nombre</option>
                }
            </select>

            <label for="horario">Horario:</label>
            <select id="horario" required>
                @foreach (var horario in ViewBag.Horario)
                {
                    <option value="@horario.IdHorario">
                        @horario.HoraInicio.ToString(@"hh\:mm") - @horario.HoraFin.ToString(@"hh\:mm")
                    </option>
                }
            </select>


=======
                <option value="Administrador">Administrador</option>
                <option value="Cocinero">Cocinero</option>
                <option value="Gerente">Gerente</option>
            </select>
            <label for="horario">Horario:</label>
            <input type="text" id="horario" placeholder="Ej: 8:00 AM - 5:00 PM" required>
>>>>>>> b443d5bcbbc351568de9d98909daa9b1ca643d12
            <label for="salario">Salario:</label>
            <input type="number" id="salario" min="0" required>
            <button type="submit">Guardar</button>
        </form>
    </div>
</div>

<<<<<<< HEAD
<script>
    let isEditMode = false;

    document.getElementById("addEmployeeBtn").addEventListener("click", function () {
        document.getElementById("employeeForm").reset();
        document.getElementById("modalTitle").textContent = "Añadir Empleado";
        document.getElementById("employeeModal").style.display = "block";
    });

    document.getElementById("closeModal").addEventListener("click", function () {
        cerrarModal();
    });

    document.getElementById("employeeForm").addEventListener("submit", function (e) {
        e.preventDefault();

        const idEmpleado = document.getElementById("idEmpleado").value;
=======
<!-- Script JS -->
<script>
    // Obtener elementos
    const modal = document.getElementById("employeeModal");
    const addEmployeeBtn = document.getElementById("addEmployeeBtn");
    const closeModal = document.getElementById("closeModal");
    const employeeForm = document.getElementById("employeeForm");

    // Abrir modal
    addEmployeeBtn.onclick = function () {
        modal.style.display = "block";
    }

    // Cerrar modal
    closeModal.onclick = function () {
        modal.style.display = "none";
    }

    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }

    // Manejar el envío del formulario
    employeeForm.onsubmit = function (e) {
        e.preventDefault();

        // Obtener valores del formulario
>>>>>>> b443d5bcbbc351568de9d98909daa9b1ca643d12
        const nombre = document.getElementById("nombre").value;
        const apellido = document.getElementById("apellido").value;
        const email = document.getElementById("email").value;
        const rol = document.getElementById("rol").value;
        const horario = document.getElementById("horario").value;
        const salario = document.getElementById("salario").value;

<<<<<<< HEAD
        let url = "/Admin/AgregarEmpleado";
        let method = "POST";
        let body = JSON.stringify({ nombre, apellido, email, IdRol: rol, IdHorario: horario, Salario: salario });

        if (isEditMode) {
            url = "/Admin/ActualizarEmpleado";
            method = "POST";
            body = JSON.stringify({ idEmpleado, nombre, apellido, email, IdRol: rol, IdHorario: horario, Salario: salario });
        }

        fetch(url, {
            method: method,
            headers: { "Content-Type": "application/json" },
            body: body
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert(data.message);
                }
            })
            .catch(error => console.error('Error:', error));
    });

    function editarEmpleado(idEmpleado) {
        fetch(`/Admin/ObtenerEmpleado?id=${idEmpleado}`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    console.log("Empleado data:", data.data);

                    const empleado = data.data;
                    // Populate the modal with the employee data
                    document.getElementById("idEmpleado").value = empleado.idEmpleado;
                    document.getElementById("nombre").value = empleado.nombre;
                    document.getElementById("apellido").value = empleado.apellido;
                    document.getElementById("email").value = empleado.email;
                    document.getElementById("rol").value = empleado.idRol;
                    document.getElementById("horario").value = empleado.idHorario;
                    document.getElementById("salario").value = empleado.salario;

                    // Set edit mode flag
                    isEditMode = true;
                    document.getElementById("modalTitle").textContent = "Editar Empleado";
                    document.getElementById("employeeModal").style.display = "block";
                } else {
                    alert(data.message); // Show an error message if employee not found
                }
            })
            .catch(error => {
                console.error("Error al obtener los datos del empleado:", error);
                alert("Error al cargar los datos del empleado.");
            });
    }


    function eliminarEmpleado(id) {
        if (confirm("¿Estás seguro de que deseas eliminar este empleado?")) {
            fetch(`/Admin/EliminarEmpleado/${id}`, { method: "POST" })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload(); // Recarga la página para actualizar la tabla
                    } else {
                        alert(data.message); // Muestra un mensaje si falla la eliminación
                    }
                });
        }
    }

    function cerrarModal() {
        document.getElementById("employeeModal").style.display = "none";
        document.getElementById("employeeForm").reset();
        isEditMode = false;
    }

=======
        // Agregar una nueva fila
        const table = document.querySelector("#employeeTable tbody");
        const newRow = `
                <tr>
                    <td>Nuevo</td>
                    <td>${nombre}</td>
                    <td>${apellido}</td>
                    <td>${email}</td>
                    <td>${rol}</td>
                    <td>${horario}</td>
                    <td>$${salario}</td>
                    <td>
                        <button class="icon-btn edit"><i class="fas fa-edit"></i></button>
                        <button class="icon-btn delete"><i class="fas fa-trash-alt"></i></button>
                        <button class="icon-btn add-task"><i class="fas fa-plus-circle"></i></button>
                    </td>
                </tr>
            `;
        table.insertAdjacentHTML('beforeend', newRow);

        // Cerrar el modal
        modal.style.display = "none";
        employeeForm.reset();
    }
>>>>>>> b443d5bcbbc351568de9d98909daa9b1ca643d12
</script>
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="~/css/Estilos.css" />

<body>
<h1 class="titulo-tabla">Empleados</h1>

<!-- Tabla de Empleados -->
<table id="employeeTable">
    <thead>
        <tr>
            <th>ID</th>
            <th>Nombre</th>
            <th>Apellido</th>
            <th>Email</th>
            <th>Rol</th>
            <th>Horario</th>
            <th>Salario</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var empleado in Model)
        {
            <tr id="employee-@empleado.IdEmpleado">
                <td>@empleado.IdEmpleado</td>
                <td>@empleado.Nombre</td>
                <td>@empleado.Apellido</td>
                <td>@empleado.Email</td>
                <td>@empleado.Rol.Nombre</td>
                <td>@empleado.Horario.HoraInicio - @empleado.Horario.HoraFin</td>
                <td>$@empleado.Salario</td>
                <td>
                    <button class="icon-btn edit" onclick="editarEmpleado(@empleado.IdEmpleado)">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="icon-btn delete" onclick="eliminarEmpleado(@empleado.IdEmpleado)">
                        <i class="fas fa-trash-alt"></i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Botón Añadir Empleado -->
<button class="add-employee" id="addEmployeeBtn">
        <i class="fa-solid fa-user-plus"></i>
    Añadir Empleado</button>

<!-- Modal para añadir/editar empleado -->
<div id="employeeModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2 id="modalTitle">Añadir Empleado</h2>
            <span class="close" id="closeModal">&times;</span>
        </div>
        <form id="employeeForm">
            <input type="hidden" id="idEmpleado">
            <label for="nombre">Nombre:</label>
            <input type="text" id="nombre" required>
            <label for="apellido">Apellido:</label>
            <input type="text" id="apellido" required>
            <label for="email">Email:</label>
            <input type="email" id="email" required>
            <label for="rol">Rol:</label>
            <select id="rol" required>
                @foreach (var rol in ViewBag.Roles)
                {
                    <option value="@rol.Id">@rol.Nombre</option>
                }
            </select>
            <label for="horario">Horario:</label>
            <select id="horario" required>
                @foreach (var horario in ViewBag.Horario)
                {
                    <option value="@horario.IdHorario">
                        @horario.HoraInicio.ToString(@"hh\:mm") - @horario.HoraFin.ToString(@"hh\:mm")
                    </option>
                }
            </select>
            <label for="salario">Salario:</label>
            <input type="number" id="salario" min="0" required>
            <button type="submit">Guardar</button>
        </form>
    </div>
</div>
</body>
<script>
    let isEditMode = false;

    document.getElementById("addEmployeeBtn").addEventListener("click", function () {
        document.getElementById("employeeForm").reset();
        document.getElementById("modalTitle").textContent = "Añadir Empleado";
        document.getElementById("employeeModal").style.display = "block";
    });

    document.getElementById("closeModal").addEventListener("click", function () {
        cerrarModal();
    });

    document.getElementById("employeeForm").addEventListener("submit", function (e) {
        e.preventDefault();

        const idEmpleado = document.getElementById("idEmpleado").value;
        const nombre = document.getElementById("nombre").value;
        const apellido = document.getElementById("apellido").value;
        const email = document.getElementById("email").value;
        const rol = document.getElementById("rol").value;
        const horario = document.getElementById("horario").value;
        const salario = document.getElementById("salario").value;

        let url = "/Admin/AgregarEmpleado";
        let method = "POST";
        let body = JSON.stringify({ nombre, apellido, email, IdRol: rol, IdHorario: horario, Salario: salario });

        if (isEditMode) {
            url = "/Admin/ActualizarEmpleado";
            method = "POST";
            body = JSON.stringify({ idEmpleado, nombre, apellido, email, IdRol: rol, IdHorario: horario, Salario: salario });
        }

        fetch(url, {
            method: method,
            headers: { "Content-Type": "application/json" },
            body: body
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert(data.message);
                }
            })
            .catch(error => console.error('Error:', error));
    });

    function editarEmpleado(idEmpleado) {
        fetch(`/Admin/ObtenerEmpleado?id=${idEmpleado}`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    console.log("Empleado data:", data.data);

                    const empleado = data.data;
                    // Populate the modal with the employee data
                    document.getElementById("idEmpleado").value = empleado.idEmpleado;
                    document.getElementById("nombre").value = empleado.nombre;
                    document.getElementById("apellido").value = empleado.apellido;
                    document.getElementById("email").value = empleado.email;
                    document.getElementById("rol").value = empleado.idRol;
                    document.getElementById("horario").value = empleado.idHorario;
                    document.getElementById("salario").value = empleado.salario;

                    // Set edit mode flag
                    isEditMode = true;
                    document.getElementById("modalTitle").textContent = "Editar Empleado";
                    document.getElementById("employeeModal").style.display = "block";
                } else {
                    alert(data.message); // Show an error message if employee not found
                }
            })
            .catch(error => {
                console.error("Error al obtener los datos del empleado:", error);
                alert("Error al cargar los datos del empleado.");
            });
    }


    function eliminarEmpleado(id) {
        if (confirm("¿Estás seguro de que deseas eliminar este empleado?")) {
            fetch(`/Admin/EliminarEmpleado/${id}`, { method: "POST" })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload(); // Recarga la página para actualizar la tabla
                    } else {
                        alert(data.message); // Muestra un mensaje si falla la eliminación
                    }
                });
        }
    }

    function cerrarModal() {
        document.getElementById("employeeModal").style.display = "none";
        document.getElementById("employeeForm").reset();
        isEditMode = false;
    }

</script>